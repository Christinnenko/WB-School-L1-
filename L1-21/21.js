// Вычислить размер коллстэка в основных браузерах: Chrome, Firefox, Opera и Safari (если есть возможность)

//основано на статье https://habr.com/ru/articles/550534/: "JavaScript: Стек вызовов и магия его размера"
//Для определения размера коллстека в браузере используем функцию, которая рекурсивно вызывает сама себя

//Вариант 1
let i = 0;

const func = () => {
  i++;

  func();
};

try {
  func();
} catch (e) {
  //при ошибке переполнения стэка - вывод значения счетчика в консоль
  console.log(i);
}

//Вариант 2
let i = 0;

const func = () => {
  let a = i + 1;
  let b = a + 1;
  let c = b + 1;
  let d = c + 1;
  i++;

  func();
};

try {
  func();
} catch (e) {
  console.log(i);
}

// В первом варианте функция вызовется большее кол-во раз чем во втором. Различие вариантов только в наличии дополнительных переменных внутри тела функции
// Варианта 2 => именно из-за этого максимальное количество рекурсивных вызовов стало меньше;
// Количество вызовов функции Варината 1 в Chrome и Safari - разное;
// Выводы: количество рекурсивных вызовов функции до переполнения стэка зависит от самих функций. Чем "тяжелее" функция, тем меньше раз она может быть вызвана рекурсивно.
// Размер стэка в разных браузерах различается
